[project]
name = "ggseg_py"
dynamic = ["version"]
description = "A Python version of the ggseg R package"
readme = "README.md"
license = {text = "BSD-3-Clause"}
authors = [ {name = "Fabian Schmidt", email = "schmidtfa91@gmail.com"},
]

classifiers = [
        'Development Status :: 4 - Beta',
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: BSD License',
        'Operating System :: OS Independent',
        'Programming Language :: Python',
        'Typing :: Typed'
]

keywords = ['ggseg', 'M/EEG', 'MRI', 'parcellation']
requires-python = ">=3.11"
dependencies = ['pandas', 'geopandas', 'rdata']

[tool.pixi.system-requirements]
linux = "4.18"

[project.urls]
repository = "https://github.com/schmidtfa/ggseg_py"

[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "win-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
ggseg_py = { path = ".", editable = true }

[tool.pixi.feature.jupyter.dependencies]
jupyter = ">=1.0.0,<1.1"
ipython = ">=8.26.0,<8.27"
ipykernel = ">=6.29.5,<6.30"
seaborn = ">=0.13.2,<0.14"
matplotlib = ">=3.9.1,<3.10"

[tool.pixi.tasks]
test = "pytest --cov=ggseg_py --cov-report=lcov"
lint = "ruff format && ruff check --fix"
lint_ci = "ruff check"
check_types = "mypy ggseg_py tests"

[tool.pixi.dependencies]
hatch = ">=1.12.0,<1.13"
ipython = ">=8.26.0,<8.27"
ipykernel = ">=6.29.5,<6.30"
ruff = ">=0.5.2,<0.6"
pre-commit = ">=3.7.1,<3.8"
pytest = ">=8.2.2,<8.3"
pytest-cov = ">=5.0.0,<5.1"
mypy = ">=1.10.1,<2"
pandas-stubs = ">=2.2.2.240603,<3"
tabulate = ">=0.9.0,<0.10"
ipywidgets = ">=8.1.5,<9"
pyproj = "3.7.1"


[tool.pixi.feature]
py311 = {dependencies = {python="3.11.*"}}
py312 = {dependencies = {python="3.12.*"}}

[tool.pixi.environments]
default = {features = [], solve-group = "default"}
jupyter = {features = ["jupyter"], solve-group = "default"}
testpy311 = ['py311']
testpy312 = ['py312']

[tool.hatch.version]
source = "regex_commit"
path = "ggseg_py/__version__.py"
tag_sign = false

[tool.ruff]
line-length = 120
exclude = ['old', 'paper', 'tests']

[tool.ruff.lint]
extend-select = [
    'E',
    'W',
    'I',
    'UP',
    'C90',
    'N',
    'PTH',
    'SIM',
    'TCH',
    'PL'
]
ignore = ['PLR0913']

[tool.ruff.format]
quote-style = 'single'

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--ignore=ggseg_py/__version__.py"

[tool.mypy]
disable_error_code = "import-untyped"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "ggseg_py.*"
disallow_untyped_defs = true
